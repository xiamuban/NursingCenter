<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nursing.center.mapper.NursingRecordsMapper">
  <resultMap id="BaseResultMap" type="com.nursing.center.model.NursingRecords">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="add_date" jdbcType="TIMESTAMP" property="addDate" />
    <result column="cust_id" jdbcType="INTEGER" property="custId" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
    <result column="nursing_time" jdbcType="TIMESTAMP" property="nursingTime" />
    <result column="nursing_content" jdbcType="INTEGER" property="nursingContent" />
    <result column="nursing_num" jdbcType="INTEGER" property="nursingNum" />
    <result column="nurse_id" jdbcType="INTEGER" property="nurseId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from nursing_records
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nursing.center.model.NursingRecords">
    insert into nursing_records (id, add_date, cust_id, 
      del_flag, nursing_time, nursing_content, 
      nursing_num, nurse_id)
    values (#{id,jdbcType=INTEGER}, #{addDate,jdbcType=TIMESTAMP}, #{custId,jdbcType=INTEGER}, 
      #{delFlag,jdbcType=CHAR}, #{nursingTime,jdbcType=TIMESTAMP}, #{nursingContent,jdbcType=INTEGER}, 
      #{nursingNum,jdbcType=INTEGER}, #{nurseId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.nursing.center.model.NursingRecords">
    update nursing_records
    set add_date = #{addDate,jdbcType=TIMESTAMP},
      cust_id = #{custId,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=CHAR},
      nursing_time = #{nursingTime,jdbcType=TIMESTAMP},
      nursing_content = #{nursingContent,jdbcType=INTEGER},
      nursing_num = #{nursingNum,jdbcType=INTEGER},
      nurse_id = #{nurseId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, add_date, cust_id, del_flag, nursing_time, nursing_content, nursing_num, 
    nurse_id
    from nursing_records
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, add_date, cust_id, del_flag, nursing_time, nursing_content, nursing_num, 
    nurse_id
    from nursing_records
  </select>

  <resultMap id="connResultMap" type="com.nursing.center.model.NursingRecords" extends="BaseResultMap">
    <!-- 一对一关联 -->
    <!--
      property: 一对一关联封装的父表的对象名
      column: 两张表的关联字段名
      javaType: 一对一关联封装的父表的类名
    -->
    <association property="customer" column="customer_id" javaType="com.nursing.center.model.Customer">
      <id column="cid" jdbcType="INTEGER" property="id" />
      <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
      <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
      <result column="customer_age" jdbcType="INTEGER" property="customerAge" />
      <result column="customer_sex" jdbcType="INTEGER" property="customerSex" />
      <result column="idcard" jdbcType="VARCHAR" property="idcard" />
      <result column="room_number" jdbcType="INTEGER" property="roomNumber" />
      <result column="elder_type" jdbcType="VARCHAR" property="elderType" />
      <result column="checkin_date" jdbcType="TIMESTAMP" property="checkinDate" />
      <result column="expiration_date" jdbcType="TIMESTAMP" property="expirationDate" />
      <result column="contact_tel" jdbcType="VARCHAR" property="contactTel" />
      <result column="bed_id" jdbcType="INTEGER" property="bedId" />
      <result column="psychosomatic_state" jdbcType="VARCHAR" property="psychosomaticState" />
      <result column="attention" jdbcType="VARCHAR" property="attention" />
      <result column="birthday" jdbcType="DATE" property="birthday" />
      <result column="height" jdbcType="VARCHAR" property="height" />
      <result column="marital_status" jdbcType="VARCHAR" property="maritalStatus" />
      <result column="weight" jdbcType="VARCHAR" property="weight" />
      <result column="blood_type" jdbcType="VARCHAR" property="bloodType" />
      <result column="filepath" jdbcType="VARCHAR" property="filepath" />
    </association>

    <association property="content" column="nursing_content" javaType="com.nursing.center.model.NursingContent">
      <id column="ncid" jdbcType="INTEGER" property="id" />
      <result column="level_id" jdbcType="INTEGER" property="levelId" />
      <result column="name" jdbcType="VARCHAR" property="name" />
      <result column="price" jdbcType="DOUBLE" property="price" />
      <result column="description" jdbcType="VARCHAR" property="description" />
    </association>

    <association property="user" column="nurse_id" javaType="com.nursing.center.model.User">
      <id column="uid" jdbcType="INTEGER" property="id" />
      <result column="username" jdbcType="VARCHAR" property="username" />
    </association>

  </resultMap>

  <select id="queryAll" parameterType="com.nursing.center.model.NursingRecords" resultMap="connResultMap">
    select nr.id, nr.add_date, nr.cust_id, nr.del_flag, nr.nursing_time, nr.nursing_content, nr.nursing_num, nr.nurse_id,
           c.id cid, c.is_deleted, c.customer_name, c.customer_age, c.customer_sex,
           c.idcard, c.room_number, c.elder_type, c.checkin_date, c.expiration_date, c.contact_tel, c.bed_id,
           c.psychosomatic_state, c.attention, c.birthday, c.height, c.marital_status, c.weight, c.blood_type,
           c.filepath,
           nc.id ncid, nc.level_id, nc.name, nc.price, nc.description,
           u.id uid,u.username
    from nursing_records nr
    left join customer c
    on c.id = nr.cust_id
    left join nursing_content nc
    on nr.nursing_content = nc.id
    left join user u
    on nr.nurse_id = u.id
    <where>
      <if test="custId != null and custId != ''">
            AND nr.cust_id = #{custId}
      </if>
      <if test="nurseId != null and nurseId != ''">
        AND nr.nurse_id = #{nurseId}
      </if>
      <if test="nursingContent != null and nursingContent != ''">
        AND nr.nursing_content = #{nursingContent}
      </if>

    </where>
  </select>
</mapper>