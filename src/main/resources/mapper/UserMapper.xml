<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nursing.center.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.nursing.center.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nursing.center.model.User">
    insert into user (id, username, sex, 
      create_time, age, create_by, 
      is_deleted, password, email, 
      phone_number)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{age,jdbcType=INTEGER}, #{createBy,jdbcType=INTEGER}, 
      #{isDeleted,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phoneNumber,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.nursing.center.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      age = #{age,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, username, sex, create_time, age, create_by, is_deleted, password, email, 
    phone_number
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, username, sex, create_time, age, create_by, is_deleted, password, email, 
    phone_number
    from user
  </select>

  <select id="selectByUserName" parameterType="String" resultMap="BaseResultMap">
    select id,username, password
    from user
    where username = #{name}
  </select>

  <select id="getAll" resultMap="BaseResultMap" parameterType="Integer">
    select id, username, sex, create_time, age, create_by, is_deleted, password, email, phone_number
    from user
    where id in
    (select ur.user_id
    from user_role ur
    left join role r
    on ur.role_id = r.id
    where r.id = #{id})
  </select>
</mapper>